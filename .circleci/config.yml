# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.5.1-node-browsers
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
            yarn install

      - run:
          name: build frontend assets
          command: |
            yarn run build

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            
            bundle exec rspec $TEST_FILES

      - persist_to_workspace:
          root: .
          paths:
            - .

  bundle_update:
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: .
      - run:
          name: run bundle update
          command: |
            gem install circleci-bundle-update-pr
            circleci-bundle-update-pr pipopotamasu ec0156hx@gmail.com master -d
          no_output_timeout: 1h
          when: always

# workflows:
#   version: 2
#   build_and_bundle_update:
#     triggers:
#       - schedule:
#         cron: "0 13 10 * *" # JST: 22:00
#         # filters:
#         #   branches:
#         #     only: master
#     jobs:
#       - build
#       - bundle_update:
#         requires:
#           - build
